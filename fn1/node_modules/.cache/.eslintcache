[{"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\index.js":"1","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\App.js":"2","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\reportWebVitals.js":"3","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Pathroute.js":"4","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\navibar\\Navibar.jsx":"5","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Login\\Login.jsx":"6","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Ann_Register\\Ann_Register.jsx":"7","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\About us\\Aboutus.jsx":"8","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Ann_Hero\\Ann_Hero.jsx":"9","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Events_1\\Events_1.jsx":"10","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Services\\Services.jsx":"11","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Customer_registration\\Cust_reg.jsx":"12","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Appointments\\Appointments.jsx":"13","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Serv_provid_Home\\Serv_provid_Home.jsx":"14","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Service_prov_Reg\\Service_prov_reg.jsx":"15","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Schemas\\Index.js":"16","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Login_form\\Login_form.jsx":"17","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Search\\Search.jsx":"18","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Tabs\\Buttontabs.jsx":"19","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Home_Carrousel\\Home_Carrousel.jsx":"20","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Customer_Components\\Customerhero_1\\Customerhero_1.jsx":"21","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Service_provider_components\\Top_nav\\Top_nav.jsx":"22","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Customer_Components\\Events\\MyEvents\\Events_myevents.jsx":"23","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Service_provider_components\\Appointments_table\\Appoint_Tble.jsx":"24"},{"size":535,"mtime":1684870271702,"results":"25","hashOfConfig":"26"},{"size":342,"mtime":1685125804427,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1684870272048,"results":"28","hashOfConfig":"26"},{"size":1759,"mtime":1686064352170,"results":"29","hashOfConfig":"26"},{"size":4725,"mtime":1686599518639,"results":"30","hashOfConfig":"26"},{"size":935,"mtime":1686682588039,"results":"31","hashOfConfig":"26"},{"size":2201,"mtime":1686203246384,"results":"32","hashOfConfig":"26"},{"size":360,"mtime":1685637671325,"results":"33","hashOfConfig":"26"},{"size":2538,"mtime":1686733084136,"results":"34","hashOfConfig":"26"},{"size":749,"mtime":1686734658403,"results":"35","hashOfConfig":"26"},{"size":751,"mtime":1685638525684,"results":"36","hashOfConfig":"26"},{"size":10473,"mtime":1686687100062,"results":"37","hashOfConfig":"26"},{"size":404,"mtime":1685702020627,"results":"38","hashOfConfig":"26"},{"size":1287,"mtime":1686070566526,"results":"39","hashOfConfig":"26"},{"size":9817,"mtime":1686597843995,"results":"40","hashOfConfig":"26"},{"size":1486,"mtime":1686596310922,"results":"41","hashOfConfig":"26"},{"size":1229,"mtime":1686681993977,"results":"42","hashOfConfig":"26"},{"size":1777,"mtime":1685052478336,"results":"43","hashOfConfig":"26"},{"size":1374,"mtime":1685638186754,"results":"44","hashOfConfig":"26"},{"size":1671,"mtime":1686720582045,"results":"45","hashOfConfig":"26"},{"size":1094,"mtime":1685637915227,"results":"46","hashOfConfig":"26"},{"size":2869,"mtime":1685605657271,"results":"47","hashOfConfig":"26"},{"size":2064,"mtime":1685638088655,"results":"48","hashOfConfig":"26"},{"size":3144,"mtime":1685635214790,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"7f6q2",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"53"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"53"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\index.js",[],[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\App.js",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\reportWebVitals.js",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Pathroute.js",["133","134","135","136","137","138"],[],"import React from 'react'\r\nimport { BrowserRouter as Router,Route,Routes } from 'react-router-dom'\r\nimport Ann_Hero from '../pages/Annonymous/Ann_Hero/Ann_Hero'\r\nimport Events_1 from '../pages/Customer/Events_1/Events_1'\r\nimport Services from '../pages/Customer/Services/Services'\r\nimport Aboutus from '../pages/Customer/About us/Aboutus';\r\nimport Login from '../pages/Annonymous/Login/Login'\r\nimport { Appointments } from './Service_provider/Appointments/Appointments'\r\nimport Ann_Register from '../pages/Annonymous/Ann_Register/Ann_Register'\r\nimport Cust_reg from '../pages/Customer/Customer_registration/Cust_reg'\r\nimport { Service_prov_reg } from './Service_provider/Service_prov_Reg/Service_prov_reg'\r\nimport { Serv_provid_Home } from './Service_provider/Serv_provid_Home/Serv_provid_Home'\r\n\r\n\r\nexport default function Pathroute() {\r\n  return (\r\n\r\n    <div style={{marginTop:\"3%\"}}>\r\n      <Router>\r\n        <Routes>\r\n            <Route exact path = \"/\" element={<Ann_Hero/>}></Route>\r\n            <Route path = \"/events\" element={<Events_1/>}></Route>\r\n            <Route path='/services' element={<Services/>}></Route>\r\n            <Route path='/aboutus' element={<Aboutus/>}></Route>\r\n            <Route path='/login' element={<Login/>}></Route>\r\n            <Route path='/serviceprovider/appointments' element={<Appointments/>}></Route>\r\n            <Route path='/register' element={<Ann_Register/>}></Route>\r\n            <Route path='/register/customer_register' element={<Cust_reg/>}></Route>\r\n            <Route path='/register/service_provider_register' element={<Service_prov_reg />}></Route>\r\n            <Route path='/serviceprovider' element={<Serv_provid_Home/>}></Route>\r\n          \r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\navibar\\Navibar.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Login\\Login.jsx",["139","140"],[],"import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './login.css';\r\nimport login_pht from '../../../Components/Assests/login_photos_design.png';\r\nimport eventease_logo from '../../../Components/Assests/eventease_logo.png';\r\nimport Login_form from '../../../Components/Login_form/Login_form'\r\n\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Container fluid className='login_container'>\r\n\r\n      <Row className='login_row' style={{width:\"100%\", padding:\"0 0 0 \"}}>\r\n\r\n        <Col className='login_left_side' >\r\n\r\n          \r\n          \r\n        <img src={login_pht} alt=\"img\"className='login_img' />\r\n        <img src={eventease_logo} className='logo' />\r\n\r\n        </Col>\r\n        <Col className='login_right_side'>\r\n          <div style={{marginTop:\"10vh\"}}>\r\n          <Login_form/>\r\n          </div>\r\n         \r\n        </Col>\r\n\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Ann_Register\\Ann_Register.jsx",["141"],[],"import React from 'react';\r\nimport Ann_reg_back from '../Ann_Register/Assests/Ann_reg_back.png';\r\nimport './ann_register.css';\r\nimport { Button } from '@mui/material';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nexport default function Ann_Register() {\r\n  return (\r\n    <div style={{overflowX: 'hidden'}}>\r\n    <div\r\n    style={{ backgroundImage: `url(${Ann_reg_back})`, \r\n    display: \"flex\",\r\n    height: \"94%\",\r\n    backgroundColor: \"rgb(0, 0, 0)\",\r\n    backgroundPosition: \"center\",\r\n    width: \"100%\" ,\r\n    position: \"fixed\",\r\n    zIndex: \"-10\",\r\n    }}></div>\r\n\r\n    <div className='Ann_reg_first'>\r\n\r\n\r\n        <Row>\r\n          <Col style={{margin:\"3% 4% 0%\"}} xs={12} lg={6}  >\r\n        <p className='ann_login_text'>Already have an Account ?</p>\r\n        <Button variant='contained' style={{backgroundColor:\"red\"}} > Login </Button>\r\n        </Col>\r\n        <Col style={{position:\"relative\", top:\"40px\", }} >\r\n        \r\n\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={12} lg={6} >\r\n            <div className='ann_reg_button_1'>\r\n              <Button variant=\"outlined\" href='/register/customer_register' className='ann_button_cust'> <span>Register as a <br /> <b> Customer </b> </span> </Button>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} lg={6}>\r\n            <div className='ann_reg_button_2'>\r\n              <Button variant=\"outlined\" href='/serviceprovider_Registration' className='ann_button_provider'> <span>Register as a <br /> <b> Service provider </b> </span> </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n      \r\n    <Row>\r\n      <Col xs={12} lg={12} style={{margin:\"0% 1.5% 0% 1%\"}} >\r\n    <span>\r\n      <p className='Ann_reg_footer'>\"Welcome to Eventease, the premier platform connecting\r\n        customers with top-rated service providers for all their event planning needs! Whether you're organizing a wedding,<br /> birthday party, corporate event, or\r\n        any other special occasion, our easy-to-use platform lets you browse and\r\n        book from a curated selection of vendors who are experts in their field.\"</p>\r\n    </span>\r\n    </Col>\r\n    </Row>\r\n\r\n    </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\About us\\Aboutus.jsx",["142"],[],"import React from \"react\";\r\nimport './aboutus.css';\r\nimport Customerhero_1 from '../../../Components/Customer_Components/Customerhero_1/Customerhero_1'\r\n\r\n\r\n\r\nfunction PillsExample() {\r\n  return (\r\n    <div className='about_us_firstname' style={{marginTop:\"8vh\"}}>\r\n      \r\n      <Customerhero_1/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PillsExample;\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Annonymous\\Ann_Hero\\Ann_Hero.jsx",["143"],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Events_1\\Events_1.jsx",["144"],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Services\\Services.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Customer\\Customer_registration\\Cust_reg.jsx",["145","146","147","148"],[],"import React from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport \"./cust_reg.css\";\r\nimport { useFormik, Formik } from \"formik\";\r\nimport { basicSchema } from \"../../../Schemas/Index\";\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst Cust_reg = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    isSubmitting,\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit\r\n  } = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      reenterPassword: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      phoneNumber: \"\",\r\n      address: \"\",\r\n      birthday: \"\",\r\n      nicNumber: \"\",\r\n      occupation: \"\",\r\n      agreeCheckbox: \"\"\r\n    },\r\n    validationSchema: basicSchema,\r\n    onSubmit: submit\r\n  });\r\n\r\n  async function submit() {\r\n    // Check if any input value is null\r\n    if (Object.values(values).some((value) => value === null || value === \"\")) {\r\n      // Set form errors to display error messages\r\n      Formik.setErrors({ agreementCheckbox: \"Please fill in all fields\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:3001/customers\", values);\r\n      // Handle successful POST request here\r\n    } catch (error) {\r\n      // Handle error here\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2 className=\"form-heading\">Customer Registration Form</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                First Name:\r\n                <input\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                />\r\n              </label>\r\n              {errors.firstName && touched.firstName && (\r\n                <p className=\"error\"> {errors.firstName} </p>\r\n              )}\r\n            </Col>\r\n\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                Last Name:\r\n                <input\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={errors.lastName ? \"input-error\" : \"\"}\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                />\r\n              </label>\r\n              {errors.lastName && touched.lastName && (\r\n                <p className=\"error\"> {errors.lastName} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} lg={12}>\r\n              <label>\r\n                Phone Number:\r\n                <input\r\n                  value={values.phoneNumber}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                />\r\n              </label>\r\n\r\n              {errors.phoneNumber && touched.phoneNumber && (\r\n                <p className=\"error\"> {errors.phoneNumber} </p>\r\n              )}\r\n            </Col>\r\n\r\n            <Col xs={12} lg={12}>\r\n              <label>\r\n                E-mail:\r\n                <input\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={errors.email && touched.email ? \"input-error\" : \"\"}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                />\r\n              </label>\r\n              {errors.email && touched.email && (\r\n                <p className=\"error\"> {errors.email} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} lg={12}>\r\n              <label>\r\n                Address:\r\n                <input\r\n                  value={values.address}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                />\r\n              </label>\r\n              {errors.address && touched.address && (\r\n                <p className=\"error\"> {errors.address} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <FormControl>\r\n                <label> Gender: </label>\r\n                <input\r\n                  value={values.gender}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"gender\"\r\n                />\r\n                {/* <RadioGroup\r\n              aria-labelledby=\"demo-radio-buttons-group-label\"\r\n              name=\"gender\"\r\n              value={values.gender}\r\n              style={{ display: \"flex\", flexDirection: \"row\" }}\r\n            >\r\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n              <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n            </RadioGroup> */}\r\n              </FormControl>\r\n            </Col>\r\n\r\n            <Col xs={12} lg={6}>\r\n              <label style={{ padding: \"10% 0%\" }}>\r\n                Birthday:\r\n                <input\r\n                  value={values.birthday}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"date\"\r\n                  name=\"birthday\"\r\n                />\r\n                {errors.birthday && touched.birthday && (\r\n                  <p className=\"error\"> {errors.birthday} </p>\r\n                )}\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                NIC Number:\r\n                <input\r\n                  value={values.nicNumber}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"nicNumber\"\r\n                />\r\n              </label>\r\n              {errors.nicNumber && touched.nicNumber && (\r\n                <p className=\"error\"> {errors.nicNumber} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12}>\r\n              <label>\r\n                Occupation:\r\n                <input\r\n                  value={values.occupation}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  name=\"occupation\"\r\n                />\r\n              </label>\r\n              {errors.occupation && touched.occupation && (\r\n                <p className=\"error\"> {errors.occupation} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <br></br>\r\n          <br></br>\r\n          <hr style={{ width: \"auto\", color: \"white\" }}></hr>\r\n\r\n          <br></br>\r\n\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                Password:\r\n                <input\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? \"input-error\" : \"\"\r\n                  }\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                />\r\n              </label>\r\n              {errors.password && touched.password && (\r\n                <p className=\"error\"> {errors.password} </p>\r\n              )}\r\n            </Col>\r\n\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                Re-enter Password:\r\n                <input\r\n                  value={values.reenterPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.reenterPassword && touched.reenterPassword\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }\r\n                  type=\"password\"\r\n                  name=\"reenterPassword\"\r\n                />\r\n              </label>\r\n              {errors.reenterPassword && touched.reenterPassword && (\r\n                <p className=\"error\"> {errors.reenterPassword} </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row style={{ marginTop: \"3%\" }}>\r\n            <Col xs={12} lg={12}>\r\n              <span>\r\n                <label>\r\n                  <input\r\n                    value={values.agreeCheckbox}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.agreeCheckbox && touched.agreeCheckbox\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }\r\n                    type=\"checkbox\"\r\n                    name=\"agreeCheckbox\"\r\n                  />\r\n                  <span style={{ color: \"white\", marginLeft: \"10px\" }}>\r\n                    I have read and agreed to the Terms and Conditions and\r\n                    Privacy Policy.\r\n                  </span>\r\n                  {errors.agreeCheckbox && touched.agreeCheckbox && (\r\n                    <p className=\"error\"> {errors.agreeCheckbox} </p>\r\n                  )}\r\n                </label>\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n\r\n          <br></br>\r\n\r\n          <Row>\r\n            <button\r\n              type=\"submit\"\r\n              style={{\r\n                width: \"25%\",\r\n                backgroundColor: \"silver\",\r\n                marginLeft: \"90%\",\r\n              }}\r\n            >\r\n              Register\r\n            </button>\r\n          </Row>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <Row>\r\n            <Col style={{ display: \"flex\" }}>\r\n              <p style={{ color: \"white\" }}>Already have an account?</p>\r\n\r\n              <Button\r\n                disabled={isSubmitting}\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                  borderColor: \"red\",\r\n                  margin: \"0% 3%\",\r\n                }}\r\n                href=\"/login\"\r\n              >\r\n                {\" \"}\r\n                Login{\" \"}\r\n              </Button>\r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cust_reg;\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Appointments\\Appointments.jsx",["149"],[],"import React from 'react'\r\nimport Top_nav from '../../../Components/Service_provider_components/Top_nav/Top_nav'\r\nimport './appointments.css'\r\n\r\nexport const Appointments = () => {\r\n  return (\r\n    <div style={{margin:\"6% 0% 0 0\"}}>\r\n      <h1 className='appt_header'>Appointments</h1>\r\n      <div style={{position:\"relative\", top:\"100%\"}}>\r\n      <Top_nav/>\r\n      </div>\r\n      \r\n      </div>\r\n  )\r\n}\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Serv_provid_Home\\Serv_provid_Home.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\pages\\Service_provider\\Service_prov_Reg\\Service_prov_reg.jsx",["150"],[],"import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './service_prov_reg.css';\r\n\r\nexport const Service_prov_reg = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      companyName: '',\r\n      email: '',\r\n      contactNumbers: [''],\r\n      address: '',\r\n      city: '',\r\n      serviceCategory: '',\r\n      website: '',\r\n      registrationId: '',\r\n      registrationDocument: null,\r\n      password: '',\r\n      confirmPassword: '',\r\n      agreedToTerms: false,\r\n    },\r\n    validationSchema: Yup.object({\r\n      companyName: Yup.string().required('Company Name is required'),\r\n      email: Yup.string().email('Invalid email address').required('Email is required'),\r\n      contactNumbers: Yup.array().of(\r\n        Yup.string().required('Contact Number is required')\r\n      ),\r\n      address: Yup.string().required('Address is required'),\r\n      city: Yup.string().required('City is required'),\r\n      serviceCategory: Yup.string().required('Service Category is required'),\r\n      website: Yup.string().required('Website is required'),\r\n      registrationId: Yup.string().required('Registration ID is required'),\r\n      registrationDocument: Yup.mixed().required('Registration Document is required'),\r\n      password: Yup.string().required('Password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n      agreedToTerms: Yup.boolean()\r\n        .oneOf([true], 'You must accept the Terms and Conditions and Privacy Policies'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      // Handle form submission here\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  const addContactNumber = () => {\r\n    formik.push('contactNumbers', '');\r\n  };\r\n\r\n  const handleContactNumberChange = (index, value) => {\r\n    formik.setFieldValue(`contactNumbers[${index}]`, value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflowX: 'hidden'}} className='Serv_Prov_form-container'>\r\n      <h2 className=\"form-heading\">Service Provider Registration</h2>\r\n      \r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <label>\r\n            Company Name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"companyName\"\r\n              value={formik.values.companyName}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n          </label>\r\n          {formik.touched.companyName && formik.errors.companyName && (\r\n            <div className=\"error\">{formik.errors.companyName}</div>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <label>\r\n            E-mail:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n          </label>\r\n          {formik.touched.email && formik.errors.email && (\r\n            <div className=\"error\">{formik.errors.email}</div>\r\n          )}\r\n        </Row>\r\n\r\n        {formik.values.contactNumbers.map((number, index) => (\r\n          <Row key={index}>\r\n            <Col xs={12} lg={6}>\r\n              <label>\r\n                {index === 0 ? 'Contact Number:' : `Contact Number ${index + 1}:`}\r\n                <input\r\n                  type=\"text\"\r\n                  name={`contactNumbers[${index}]`}\r\n                  value={number}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n              </label>\r\n              {formik.touched.contactNumbers && formik.errors.contactNumbers && (\r\n                <div className=\"error\">{formik.errors.contactNumbers[index]}</div>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} lg={6} style={{padding:\"4.5% 4% 0%\"}}>\r\n              {formik.values.contactNumbers.length < 2 && (\r\n                <button type=\"button\" onClick={addContactNumber} className='addcontact_button'>\r\n                  Add Contact Number\r\n                </button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n\r\n        <Row>\r\n          <Col xs={12} lg={6}>\r\n            <label>\r\n              Address:\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n            </label>\r\n            {formik.touched.address && formik.errors.address && (\r\n              <div className=\"error\">{formik.errors.address}</div>\r\n            )}\r\n          </Col>\r\n          <Col xs={12} lg={6}>\r\n            <label>\r\n              City:\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                value={formik.values.city}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n            </label>\r\n            {formik.touched.city && formik.errors.city && (\r\n              <div className=\"error\">{formik.errors.city}</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ padding: \"3% 0%\" }}>\r\n          <label>\r\n            Service Category:\r\n            <select\r\n              name=\"serviceCategory\"\r\n              value={formik.values.serviceCategory}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              style={{ width: \"200px\", margin:\"0% 2%\" }} // Adjust the width as per your requirements\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"category1\">Category 1</option>\r\n              <option value=\"category2\">Category 2</option>\r\n              <option value=\"category3\">Category 3</option>\r\n            </select>\r\n          </label>\r\n          {formik.touched.serviceCategory && formik.errors.serviceCategory && (\r\n            <div className=\"error\">{formik.errors.serviceCategory}</div>\r\n          )}\r\n        </Row>\r\n\r\n        <Row>\r\n          <label>\r\n            Web Site:\r\n            <input\r\n              type=\"text\"\r\n              name=\"website\"\r\n              value={formik.values.website}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n          </label>\r\n          {formik.touched.website && formik.errors.website && (\r\n            <div className=\"error\">{formik.errors.website}</div>\r\n          )}\r\n        </Row>\r\n\r\n        <Row>\r\n          <label>\r\n            Registration ID:\r\n            <input\r\n              type=\"text\"\r\n              name=\"registrationId\"\r\n              value={formik.values.registrationId}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n          </label>\r\n          {formik.touched.registrationId && formik.errors.registrationId && (\r\n            <div className=\"error\">{formik.errors.registrationId}</div>\r\n          )}\r\n        </Row>\r\n        <br></br>\r\n        <Row>\r\n          <Col xs={12} lg={6}>\r\n            <label>\r\n              Registration Document:\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/png\"\r\n                name=\"registrationDocument\"\r\n                onChange={(e) =>\r\n                  formik.setFieldValue('registrationDocument', e.target.files[0])\r\n                }\r\n                onBlur={formik.handleBlur}\r\n              />\r\n            </label>\r\n            {formik.touched.registrationDocument && formik.errors.registrationDocument && (\r\n              <div className=\"error\">{formik.errors.registrationDocument}</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br></br>\r\n        <hr style={{width:\"200%\", backgroundColor:\"white\", height:\"2px\"}}></hr>\r\n        <Row>\r\n          <Col xs={12} lg={6}>\r\n            <label>\r\n              Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n            </label>\r\n            {formik.touched.password && formik.errors.password && (\r\n              <div className=\"error\">{formik.errors.password}</div>\r\n            )}\r\n          </Col>\r\n\r\n          <Col xs={12} lg={6}>\r\n            <label>\r\n              Re-enter Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={formik.values.confirmPassword}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n            </label>\r\n            {formik.touched.confirmPassword && formik.errors.confirmPassword && (\r\n              <div className=\"error\">{formik.errors.confirmPassword}</div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{padding:\"2% 0%\"}}>\r\n          <label>\r\n            I have read and agreed to the Terms and Conditions and Privacy Policies:\r\n            <input \r\n              type=\"checkbox\"\r\n              style={{margin:\"0% 1% 0% \"}}\r\n              name=\"agreedToTerms\"\r\n              checked={formik.values.agreedToTerms}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n          </label>\r\n          {formik.touched.agreedToTerms && formik.errors.agreedToTerms && (\r\n            <div className=\"error\">{formik.errors.agreedToTerms}</div>\r\n          )}\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={12} lg={6}>\r\n            <button type=\"submit\">Submit</button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Schemas\\Index.js",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Login_form\\Login_form.jsx",["151","152"],[],"import React from \"react\"\r\nimport './login_form.css'\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"Auth-form-container\">\r\n      <form className=\"Auth-form\">\r\n        <div className=\"Auth-form-content\">\r\n          <h3 className=\"Auth-form-title\">Login</h3>\r\n          <div className=\"form-group mt-3\">\r\n            <label style={{color:\"black\", fontWeight:\"normal\"}}>Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label style={{color:\"black\", fontWeight:\"normal\"}} >Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"Enter password\"\r\n            />\r\n          </div>\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <p className=\"forgot-password text-right mt-2\">\r\n            Forgot <a href=\"#\">password?</a>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Search\\Search.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Tabs\\Buttontabs.jsx",["153"],[],"import React, { useState } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './buttontabs.css';\r\nimport Event_BasicTable from '../../Components/Customer_Components/Events/MyEvents/Events_myevents'\r\n\r\nfunction Buttontabs() {\r\n  const [activeTab, setActiveTab] = useState('link-1'); // Initialize the active tab state\r\n\r\n  const handleTabSelect = (eventKey) => {\r\n    setActiveTab(eventKey); // Update the active tab when a tab is selected\r\n  };\r\n\r\n  return (\r\n    <div className='first_section_buttontabs'>\r\n      <Nav fill variant=\"tabs\" defaultActiveKey=\"/link-1\" activeKey={activeTab} onSelect={handleTabSelect}>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\">My Events</Nav.Link>\r\n        </Nav.Item> \r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-2\">Past Events</Nav.Link>\r\n        </Nav.Item>     \r\n      </Nav>\r\n\r\n      {/* Render the relevant component based on the active tab */}\r\n      {activeTab === 'link-1' ? <MyEventsComponent /> : null}\r\n      {activeTab === 'link-2' ? <PastEventsComponent /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define the components for My Events and Past Events\r\nfunction MyEventsComponent() {\r\n  return <div style={{position:\"relative\" ,top:\"4vh\"}}>\r\n    <Event_BasicTable/>\r\n    </div>;\r\n}\r\n\r\nfunction PastEventsComponent() {\r\n  return <div>Past Events Component</div>;\r\n}\r\n\r\nexport default Buttontabs;\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Home_Carrousel\\Home_Carrousel.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Customer_Components\\Customerhero_1\\Customerhero_1.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Service_provider_components\\Top_nav\\Top_nav.jsx",["154"],[],"import React, { useState } from 'react';\r\nimport './top_nav.css';\r\nimport Appoint_Tble from '../Appointments_table/Appoint_Tble'\r\n\r\nfunction Buttontabs() {\r\n  const [activeButton, setActiveButton] = useState('button-1'); // Initialize the active button state\r\n\r\n  const handleButtonClick = (buttonId) => {\r\n    setActiveButton(buttonId); // Update the active button when a button is clicked\r\n  };\r\n\r\n  return (\r\n    <div className=\"first_section_buttontabs\">\r\n      <div className=\"button-container\">\r\n        <button\r\n          className={`button ${activeButton === 'button-1' ? 'active' : ''}`}\r\n          onClick={() => handleButtonClick('button-1')}\r\n        >\r\n          New Appointments\r\n        </button>\r\n        <button\r\n          className={`button ${activeButton === 'button-2' ? 'active' : ''}`}\r\n          onClick={() => handleButtonClick('button-2')}\r\n        >\r\n          Suggested Appointments\r\n        </button>\r\n        <button\r\n          className={`button ${activeButton === 'button-3' ? 'active' : ''}`}\r\n          onClick={() => handleButtonClick('button-3')}\r\n        >\r\n          Confirmed Appointments\r\n        </button>\r\n        <button\r\n          className={`button ${activeButton === 'button-4' ? 'active' : ''}`}\r\n          onClick={() => handleButtonClick('button-4')}\r\n        >\r\n          Canceled Appointments\r\n        </button>\r\n        <button\r\n          className={`button ${activeButton === 'button-5' ? 'active' : ''}`}\r\n          onClick={() => handleButtonClick('button-5')}\r\n        >\r\n          Past Appointments\r\n        </button>\r\n      </div>\r\n\r\n      {/* Render the relevant component based on the active button */}\r\n      {activeButton === 'button-1' ? <NewAppointmentsComponent /> : null}\r\n      {activeButton === 'button-2' ? <SuggestedAppointmentsComponent /> : null}\r\n      {activeButton === 'button-3' ? <ConfirmedAppointmentsComponent /> : null}\r\n      {activeButton === 'button-4' ? <CanceledAppointmentsComponent /> : null}\r\n      {activeButton === 'button-5' ? <PastAppointmentsComponent /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define the components for each button\r\nfunction NewAppointmentsComponent() {\r\n  return (\r\n    <div className=\"content\">\r\n      <Appoint_Tble/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SuggestedAppointmentsComponent() {\r\n  return (\r\n    <div className=\"content\">\r\n      Suggested Appointments Component\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ConfirmedAppointmentsComponent() {\r\n  return (\r\n    <div className=\"content\">\r\n      Confirmed Appointments Component\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CanceledAppointmentsComponent() {\r\n  return (\r\n    <div className=\"content\">\r\n      Canceled Appointments Component\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PastAppointmentsComponent() {\r\n  return (\r\n    <div className=\"content\">\r\n      Past Appointments Component\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttontabs;\r\n","D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Customer_Components\\Events\\MyEvents\\Events_myevents.jsx",[],[],"D:\\projectfinal\\SoftwareDevelopmentProject\\fn1\\src\\Components\\Service_provider_components\\Appointments_table\\Appoint_Tble.jsx",[],[],{"ruleId":"155","severity":1,"message":"156","line":21,"column":46,"nodeType":"157","messageId":"158","endLine":21,"endColumn":57},{"ruleId":"155","severity":1,"message":"159","line":22,"column":46,"nodeType":"157","messageId":"158","endLine":22,"endColumn":57},{"ruleId":"155","severity":1,"message":"160","line":27,"column":46,"nodeType":"157","messageId":"158","endLine":27,"endColumn":61},{"ruleId":"155","severity":1,"message":"161","line":28,"column":64,"nodeType":"157","messageId":"158","endLine":28,"endColumn":75},{"ruleId":"155","severity":1,"message":"162","line":29,"column":72,"nodeType":"157","messageId":"158","endLine":29,"endColumn":92},{"ruleId":"155","severity":1,"message":"163","line":30,"column":53,"nodeType":"157","messageId":"158","endLine":30,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":20,"column":9,"nodeType":"157","endLine":20,"endColumn":54},{"ruleId":"155","severity":1,"message":"166","line":25,"column":11,"nodeType":"157","messageId":"158","endLine":25,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":5,"column":20,"nodeType":"169","messageId":"170","endLine":5,"endColumn":29},{"ruleId":"155","severity":1,"message":"171","line":11,"column":7,"nodeType":"157","messageId":"158","endLine":11,"endColumn":24},{"ruleId":"155","severity":1,"message":"172","line":44,"column":9,"nodeType":"157","messageId":"158","endLine":44,"endColumn":26},{"ruleId":"167","severity":1,"message":"173","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"174","line":6,"column":23,"nodeType":"169","messageId":"170","endLine":6,"endColumn":39},{"ruleId":"167","severity":1,"message":"175","line":6,"column":41,"nodeType":"169","messageId":"170","endLine":6,"endColumn":50},{"ruleId":"167","severity":1,"message":"176","line":6,"column":52,"nodeType":"169","messageId":"170","endLine":6,"endColumn":57},{"ruleId":"167","severity":1,"message":"177","line":6,"column":59,"nodeType":"169","messageId":"170","endLine":6,"endColumn":69},{"ruleId":"155","severity":1,"message":"178","line":10,"column":7,"nodeType":"157","messageId":"158","endLine":10,"endColumn":17},{"ruleId":"167","severity":1,"message":"179","line":52,"column":9,"nodeType":"169","messageId":"170","endLine":52,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":4,"column":1,"nodeType":"182","endLine":38,"endColumn":2},{"ruleId":"183","severity":1,"message":"184","line":32,"column":20,"nodeType":"157","endLine":32,"endColumn":32},{"ruleId":"155","severity":1,"message":"185","line":34,"column":5,"nodeType":"157","messageId":"158","endLine":34,"endColumn":24},{"ruleId":"155","severity":1,"message":"186","line":61,"column":7,"nodeType":"157","messageId":"158","endLine":61,"endColumn":22},"react/jsx-pascal-case","Imported JSX component Ann_Hero must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Events_1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Ann_Register must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Cust_reg must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Service_prov_reg must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Serv_provid_Home must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component Login_form must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","Imported JSX component Customerhero_1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Home_Carrousel must be in PascalCase or SCREAMING_SNAKE_CASE","'Buttontabs' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","Imported JSX component Top_nav must be in PascalCase or SCREAMING_SNAKE_CASE","'handleContactNumberChange' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","Imported JSX component Event_BasicTable must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Appoint_Tble must be in PascalCase or SCREAMING_SNAKE_CASE"]