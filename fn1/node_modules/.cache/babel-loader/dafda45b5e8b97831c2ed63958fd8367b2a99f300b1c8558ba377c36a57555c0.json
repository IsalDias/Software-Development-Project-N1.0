{"ast":null,"code":"import * as yup from 'yup';\nconst passwordRules = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n\n// Contains at least one lowercase letter.\n// Contains at least one uppercase letter.\n// Contains at least one digit.\n// Contains at least one special character from the set [!@#$%^&*].\n// Has a minimum length of 8 characters.\n\nexport const basicSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"Required\"),\n  password: yup.string().min(5).matches(passwordRule, {\n    message: \"Please create a stronger Password\"\n  }).required(\"Required\"),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required(\"Required\"),\n  firstname: yup.string().required(\"Required\"),\n  lastname: yup.string().required(\"Required\"),\n  phone: yup.string(\"Please enter a valid email\").required(\"Required\"),\n  address: yup.string().required(\"Required\"),\n  nicNumber: yup.string(\"Please enter a valid email\").required(\"Required\"),\n  occupation: yup.string().required(\"Required\"),\n  birthday: yup.string().required(\"Required\"),\n  check: yup.boolean().oneOf([true], 'Must Accept Terms and Conditions').required(\"Required\")\n});","map":{"version":3,"names":["yup","passwordRules","basicSchema","object","shape","email","string","required","password","min","matches","passwordRule","message","confirmPassword","oneOf","ref","firstname","lastname","phone","address","nicNumber","occupation","birthday","check","boolean"],"sources":["C:/Users/Isal Laksika/Downloads/projectfinal/fn1/src/Schemas/Index.js"],"sourcesContent":["import * as yup from 'yup';\r\n\r\n\r\nconst passwordRules = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\r\n\r\n// Contains at least one lowercase letter.\r\n// Contains at least one uppercase letter.\r\n// Contains at least one digit.\r\n// Contains at least one special character from the set [!@#$%^&*].\r\n// Has a minimum length of 8 characters.\r\n\r\n\r\nexport const basicSchema = yup.object().shape({\r\n    email: yup.string().email(\"Please enter a valid email\").required(\"Required\"),\r\n    password: yup.string() .min(5).matches(passwordRule,{message:\"Please create a stronger Password\"}).required(\"Required\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required(\"Required\"),\r\n    firstname: yup.string().required(\"Required\"),\r\n    lastname: yup.string().required(\"Required\"),\r\n    phone: yup.string(\"Please enter a valid email\").required(\"Required\"),\r\n    address: yup.string().required(\"Required\"),\r\n    nicNumber: yup.string(\"Please enter a valid email\").required(\"Required\"),\r\n    occupation: yup.string().required(\"Required\"),\r\n    birthday: yup.string().required(\"Required\"),\r\n    check: yup.boolean().oneOf([true], 'Must Accept Terms and Conditions').required(\"Required\"),\r\n    \r\n\r\n\r\n});"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAG1B,MAAMC,aAAa,GAAG,6DAA6D;;AAEnF;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC1CC,KAAK,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,4BAA4B,CAAC,CAACE,QAAQ,CAAC,UAAU,CAAC;EAC5EC,QAAQ,EAAER,GAAG,CAACM,MAAM,CAAC,CAAC,CAAEG,GAAG,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,YAAY,EAAC;IAACC,OAAO,EAAC;EAAmC,CAAC,CAAC,CAACL,QAAQ,CAAC,UAAU,CAAC;EACvHM,eAAe,EAAEb,GAAG,CAACM,MAAM,CAAC,CAAC,CAACQ,KAAK,CAAC,CAACd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB,CAAC,CAACR,QAAQ,CAAC,UAAU,CAAC;EAC7GS,SAAS,EAAEhB,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC5CU,QAAQ,EAAEjB,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CW,KAAK,EAAElB,GAAG,CAACM,MAAM,CAAC,4BAA4B,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EACpEY,OAAO,EAAEnB,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC1Ca,SAAS,EAAEpB,GAAG,CAACM,MAAM,CAAC,4BAA4B,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EACxEc,UAAU,EAAErB,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC7Ce,QAAQ,EAAEtB,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CgB,KAAK,EAAEvB,GAAG,CAACwB,OAAO,CAAC,CAAC,CAACV,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,kCAAkC,CAAC,CAACP,QAAQ,CAAC,UAAU;AAI9F,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}